"0","##Contact trajectory by time invariant covariate"
"0","##Set color panels"
"0","pal <- c(rev(brewer.pal(""Oranges"", n=9))[c(1,2,3,5,6,7)],"
"0","         brewer.pal(""Set1"", n=9)[c(1,2)],"
"0","         rev(brewer.pal(""BuPu"",n=9)[c(4,6,9)]),"
"0","         rev(brewer.pal(""GnBu"",n=9)[c(4,5,6,7,9)]),"
"0","         rev(brewer.pal(""PuRd"",n=9))[c(1,3,6)],"
"0","         brewer.pal(""Blues"",n=3),"
"0","         brewer.pal(""Purples"",n=9)[c(2,3,5,6,7)],"
"0","         brewer.pal(""Accent"",n=9)[c(3,4)],"
"0","         brewer.pal(""Greens"", n=9)[c(2,4,6,8)])"
"2","Warning: n too large, allowed maximum for palette Accent is 8
Returning the palette you asked for with that many colors
"
"0","pal_var <- data.frame(pal=pal,"
"0","           var =c(rep(""Age group"",6),"
"0","                  rep(""Gender"",2),"
"0","                  rep(""Household size"",3),"
"0","                  rep(""Race/ethnicity"",5),"
"0","                  rep(""Political affiliation"",3),"
"0","                  rep(""Employment stat"",3),"
"0","                  rep(""Household income"",5),"
"0","                  rep(""Comorbidity"",2),"
"0","                  rep(""Risk tolerance"",4)))"
"0",""
"0",""
"0","cont_cov_list <- split(df_cont_cov_long, df_cont_cov_long$var_lab)"
"0","p <- list()"
"0",""
"0","for(i in 1:9){"
"0","  pal1<- pal_var$pal[which(pal_var$var==names(cont_cov_list)[i])]"
"0","  p[[i]]<-cont_cov_list[[i]]%>%"
"0","            group_by(var_lab,val,round)%>%"
"0","            summarise(mean = mean(value))%>%"
"0","            arrange(var_lab,val)%>%"
"0","            ggplot(aes(x=round, y=mean, color=val))+"
"0","            geom_line(aes(group=as.factor(val),color=as.factor(val)), size=1.2)+"
"0","            geom_point(aes(group=as.factor(val),color=as.factor(val)),size=2.3)+"
"0","            scale_x_discrete(expand = expansion(add = c(0.4,0.4)))+"
"0","            scale_color_manual(values=pal1,na.value=""gray91"")+"
"0","            theme_bw()+ylim(0,28) +"
"0","            theme(legend.position = c(0.25, 0.78), legend.title=element_blank(),"
"0","                  legend.key.size = unit(0.2, 'cm'), #change legend key size"
"0","                  legend.key.height = unit(0.2, 'cm'), #change legend key height"
"0","                  legend.key.width = unit(0.2, 'cm'),"
"0","                  legend.text=element_text(size=10),"
"0","                  plot.margin=unit(c(0,0,0,0), ""cm""),"
"0","                  legend.margin=margin(c(1,1,1,1)),"
"0","                  plot.title = element_text(size = 14),"
"0","                  axis.text = element_text(size=13),"
"0","                  axis.title = element_text(size=13))+"
"0","            ggtitle(names(cont_cov_list)[i])+"
"0","            xlab("""")+ylab("""")"
"0","}"
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'var_lab', 'val'. You can override using the `.groups` argument."
"0","png(""0_plot/1_contact_trajectories_covariate_v4.png"",width=10,height=10, units=""in"",res=300)"
"0"," grid.arrange("
"0","  arrangeGrob(grobs = p,ncol=3,nrow=3,"
"0","             bottom=textGrob(""Round""),left=textGrob(""Mean contact"",rot = 90)))"
"2","Error in ans[ypos] <- rep(yes, length.out = len)[ypos] : 
  replacement has length zero
"
