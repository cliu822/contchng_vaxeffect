"0","  "
"0","cor.test(as.numeric(vax_cont_all99$variant_worry_cat), as.numeric(vax_cont_all99$lca4_full), method = ""spearman"")"
"2","Warning: Cannot compute exact p-value with ties"
"1","
"
"1","	Spearman's rank correlation rho"
"1","
"
"1","
"
"1","data:  "
"1",""
"1","as.numeric(vax_cont_all99$variant_worry_cat) and as.numeric(vax_cont_all99$lca4_full)"
"1",""
"1","
"
"1","S = 6.7971e+10, p-value < 2.2e-16"
"1","
"
"1","alternative hypothesis: "
"1","true "
"1",""
"1","rho"
"1",""
"1"," is "
"1",""
"1","not equal to"
"1",""
"1"," "
"1",""
"1","0"
"1",""
"1","
"
"1","sample estimates:
"
"1","       rho "
"1","
"
"1","-0.1501198 "
"1","
"
"1","
"
"0","##LCA and vax cat"
"0","vax_lca_round <- vax_cont_all99%>%"
"0","  group_by(round, variant_worry_cat,lca4_full)%>%"
"0","  dplyr::summarise(n=n())"
"2","`summarise()` has grouped output by 'round', 'variant_worry_cat'. You can override using the `.groups` argument."
"0","tab_vax_lca_round <- vax_lca_round%>%"
"0","                          left_join(vax_lca_round%>%group_by(round, lca4_full)%>%"
"0","                                      dplyr::summarise(tot=sum(n)))%>%"
"0","                          mutate(prop = n/tot)%>%"
"0","                          pivot_wider(names_from =""variant_worry_cat"",values_from =c(""prop"",""n""))%>%"
"0","                          filter(!is.na(lca4_full))%>%"
"0","                          mutate(across(where(is.numeric), ~replace_na(., 0)),"
"0","                                 across(where(is.numeric), ~round(.,digits=2)))"
"2","`summarise()` has grouped output by 'round'. You can override using the `.groups` argument."
"2","Joining with `by = join_by(round, lca4_full)`"
"0","write.csv(tab_vax_lca_round, ""0_tab/tab_worry_lca_round.csv"")"
