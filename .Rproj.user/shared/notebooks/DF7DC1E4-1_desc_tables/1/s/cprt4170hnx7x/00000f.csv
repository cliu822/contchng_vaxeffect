"0",""
"0",""
"0","##Make data frame into long"
"0","df_cont_cov_long <- df_cont_cov%>%"
"0","                        select(-StringencyIndex,-variant_worry,-variant_worry_cat, -string_cat)%>%  ##Remove continuous versions of variables"
"0","                        select(-orig_home:-orig_work, -orig_all)%>%            ##Remove untruncated contact values"
"0","                        pivot_longer(cols=c(age_cat1:lca4_full,income_cat), names_to = ""var"",values_to=""val"")%>%"
"0","                        pivot_longer(cols=val95_home:val100_all,names_to=""outcome"", values_to=""contacts"")"
"0",""
"0","cont_cov_list <- split(df_cont_cov_long,df_cont_cov_long$outcome)"
"0","##Function for table"
"0","##Set order of variables"
"0","val_ord <- c(sort(unique(df_cont_cov$age_cat1)),"
"0","             ""Female"",""Male"","
"0","             sort(unique(df_cont_cov$race_eth_i)),"
"0","             ""1"",""2-4"",""5+"","
"0","             ""Dem"",""Rep"",""Ind"",""Unknown Pol"","
"0","             sort(unique(df_cont_cov$emp_cat)),"
"0","             ""0_24000"",""25000_74000"",""75000_149000"",""150000"","
"0","             ""No"",""Yes"","
"0","             ""High"", ""Med-high"",""Med-low"",""Low"")"
"0",""
"0","var_ord <- c(""age_cat1"",""gender_i"",""race_eth_i"",""hh_cat"",""pol_cat"",""emp_cat"",""income_cat"",""comorb_cat"",""lca4_full"")"
"0",""
"0","compute_desc_timeinvar <- function(x){"
"0","                        ##Distribution, proportion and mean and sd contacts by covariates"
"0","                          cov_tab <-x%>%"
"0","                                group_by(round,var,val)%>%"
"0","                                    summarise(n=n(),"
"0","                                    mean=mean(contacts),"
"0","                                    sd = sd(contacts))"
"0","                          "
"0","                          ##Overall mean and sd contacts"
"0","                          overall <- x%>%"
"0","                                group_by(round)%>%"
"0","                                summarise(n=2403,"
"0","                                          mean=mean(contacts),"
"0","                                          sd = sd(contacts))"
"0","                               "
"0","                          tab_desc <-bind_rows(overall,cov_tab)%>%"
"0","                            "
"0","                                    mutate(prop = n/2403,"
"0","                                           lo95 = mean-1.96*(sd/sqrt(n)),"
"0","                                           hi95 = mean+1.96*(sd/sqrt(n)))%>%"
"0","                                    select(-sd)%>%"
"0","                                    mutate_at(vars(c(""mean"",""lo95"",""hi95"")),round,1)%>%"
"0","                                    pivot_wider(names_from = ""round"",values_from =c(""mean"",""lo95"",""hi95""))%>%"
"0","                                    mutate(r1 = paste0(mean_r1,"" ("",lo95_r1,""-"",hi95_r1, "")""),"
"0","                                           r2 = paste0(mean_r2,"" ("",lo95_r2,""-"",hi95_r2, "")""),"
"0","                                           r3 = paste0(mean_r3,"" ("",lo95_r3,""-"",hi95_r3, "")""),"
"0","                                           r4 = paste0(mean_r4,"" ("",lo95_r4,""-"",hi95_r4, "")""),"
"0","                                           n = paste0(n, "" ("", round(prop*100, digits = 0),""%)""),"
"0","                                           var = ifelse(is.na(var),""Overall"",var),"
"0","                                           val = ifelse(is.na(val),"""",val))%>%"
"0","                            "
"0","                                    mutate(var=factor(var, levels=c(""Overall"",var_ord)),    ##Reordering "
"0","                                           val=factor(val, levels=c("""",val_ord)))%>%"
"0","                                    arrange(var,val)%>%"
"0","                                    select(var,val,n, r1:r4)"
"0","                          "
"0","                          return(tab_desc)"
"0","}"
"0",""
"0","res_desc_timeinvar <- lapply(cont_cov_list,compute_desc_timeinvar)"
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"2","`summarise()` has grouped output by 'round', 'var'. You can override using the `.groups` argument."
"0","names(res_desc_timeinvar) <- names(cont_cov_list)"
"0","write.xlsx(res_desc_timeinvar, ""0_tab/res_desc_timeinvar_full.xlsx"")"
"0",""
