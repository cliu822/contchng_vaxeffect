library(openxlsx)
library(lme4)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(ggpubr)
library(stringr)

##Input: long form of a joined vaccine exposure and contact change outcome data frame with various outlier criteria
##Computes:
          #1) Univariate associations between covariate and outcome using linear mixed regression implemented with "lme4" package
          #2) Multivariate linear mixed regression using covariates determined apriori or selected through 
#             model selection for all contacts 99th percentile
##Visualizes:
          #1) Main effect estimate on all, work, other and home contacts with primary truncation method (99th percentile)
          #2) Sensitivity analysis of Effect estimate on all, work, other and home contacts for all other truncation methods

##Output: Excel sheet with full model effect estimates for outcomes of: 
                #1) all contacts; 
                #2) work contacts; 
                #3) other contacts;
                #4) home contacts
##          with the following types of location-specific right censoring to exclude extreme outlier responses unlikely to be accurate:
                #1)Censoring at 100 contact (CoMix);
                #2)Censoring at 99th percentile;
                #3)Censoring at 97.5th percentile;
                #4)Censoring at 95th percentile
            

vax_cont_long_full <- readRDS("0_RDSdata/3_vax_cont_long_full.RDS")%>%arrange(outcome)
vax_cont_long_full <- vax_cont_long_full%>%
                      filter(!outcome%in%c("orig_all","orig_home","orig_work","orig_other","orig_school",
                      #                     "val100_home","val99_home","val975_home","val95_home",
                                           "val100_school","val99_school","val975_school","val95_school"))

vax_cont_long_full<- vax_cont_long_full%>%filter(outcome%in%c("val99_all","val99_home","val99_other","val99_work"))
vax_cont_long_full<- vax_cont_long_full%>%
                      mutate(vax_comm_cat_all = as.factor(vax_comm_cat_all))

vax_cont_list <- split(vax_cont_long_full,vax_cont_long_full$outcome)


##Function to get coefficients, standard error, tvalue and confidence interval from the lmer model output reslt
mod_res <- function(x){
  d1 <- as.data.frame(summary(x)$coefficients)
  d2 <- as.data.frame(confint(x))
  colnames(d2)<-c("lo_2.5","hi_97.5")
  d1$cat <- row.names(d1)
  d2$cat <- row.names(d2)
  d1 <- d1%>%left_join(d2, keep=F)
  d1<- d1%>%mutate_if(is.numeric, round,2)%>%
    mutate(est = paste(Estimate,"(",lo_2.5,"-",hi_97.5,")",sep=""))
  print(d1)
}

## Function that computes univariate and multivariate model and combines them
compute_uni_full <- function(x){
                    ### Univariate
                    res_list <- list()
                    res_list[[1]] <- lmer(cont_chng~vax_cat2+(1|p_id),data = x)
                    res_list[[2]] <- lmer(cont_chng ~ age_cat1+(1|p_id), data = x)
                    res_list[[3]] <- lmer(cont_chng~ gender_i+(1|p_id),data = x)                      
                    res_list[[4]] <- lmer(cont_chng~ race_eth_i+(1|p_id),data = x)
                    res_list[[5]] <- lmer(cont_chng~income_cat +(1|p_id), data=x)
                    res_list[[6]] <- lmer(cont_chng~ hh_cat+(1|p_id),data = x)                    
                    res_list[[7]] <- lmer(cont_chng~ pol_cat+(1|p_id),data = x)
                    res_list[[8]] <- lmer(cont_chng~ emp_cat+(1|p_id),data = x) 
                    res_list[[9]] <- lmer(cont_chng~ comorb_cat+(1|p_id),data = x)
                    res_list[[10]]<-lmer(cont_chng~lca4_full+(1|p_id), data=x)
                    res_list[[11]]<- lmer(cont_chng~ base_cont+(1|p_id), data = x)
                    res_list[[12]]<-lmer(cont_chng~variant_worry_cat+(1|p_id), data = x)
                    res_list[[13]]<-lmer(cont_chng~StringencyIndex+(1|p_id), data=x)
                    #res_list[[13]]<-lmer(cont_chng~vax_comm_cat_all+(1|p_id),data=x)
                    res_list[[14]]<-lmer(cont_chng~Series_Complete_Pop_Pct+(1|p_id),data=x)

                    res_uni<- lapply(res_list,mod_res)   ##Get the confidence intervals
                    tab_uni <-do.call(rbind, res_uni)%>% ##Compile list of univariate results into one giant dataframe
                               mutate(cat=ifelse(cat=="(Intercept)","Intercept",cat))
                    
                    ##Multivariate model
                    #mod_full4<- lmer(cont_chng ~ vax_cat2+StringencyIndex+variant_worry_cat+age_cat1+pol_cat+hh_cat+income_cat+emp_cat+base_cont+lca4_full+vax_comm_cat_all+(1|p_id), data = x)
                    mod_full4<- lmer(cont_chng ~ vax_cat2+StringencyIndex+variant_worry_cat+age_cat1+pol_cat+hh_cat+emp_cat+base_cont+lca4_full+Series_Complete_Pop_Pct+(1|p_id), data = x)
                    full_res4 <- mod_res(mod_full4)
                    
                    tab_all <-tab_uni%>% 
                                  full_join(full_res4, by = c("cat"="cat"))

                    return(tab_all)
                      }

##Function to extract the uni and multi effect of vaccine on contact (main effect of interest)
get_maineff <- function(x){
              
               main_eff <- x%>%filter(cat %in% c("vax_cata1_first_new",
                                     "vax_cata2_both_new",
                                     "vax_cata2_second_new",
                                     "vax_cata3_full_vax"))%>%
                    select(cat,Estimate.x, lo_2.5.x,hi_97.5.x,Estimate.y,lo_2.5.y,hi_97.5.y)%>%
                    mutate(cat = gsub("vax_cat","",cat))
               colnames(main_eff)<- c("vaxcat","uni_est","uni_lo","uni_hi","multi_est","multi_lo","multi_hi")
               return(main_eff)
}

get_maineff1 <- function(x){
  
  main_eff <- x%>%filter(cat %in% c("vax_cat2a1_first_new",
                                    "vax_cat2a2_full_new",
                                    "vax_cat2a3_full_vax",
                                    "Series_Complete_Pop_Pct"))%>%
    select(cat,Estimate.x, lo_2.5.x,hi_97.5.x,Estimate.y,lo_2.5.y,hi_97.5.y)%>%
    mutate(cat = gsub("vax_cat2","",cat))
  colnames(main_eff)<- c("vaxcat","uni_est","uni_lo","uni_hi","multi_est","multi_lo","multi_hi")
  return(main_eff)
}


##Function to take raw output and simplify into presentable table
get_tab <- function(x){
                  res_tab <-x%>%
                                select(cat, est.x, est.y)%>%
                                rename("Univariate"="est.x")%>%
                                rename("Multivariate"="est.y")
                  return(res_tab)
                    }


##Compute univariate and multivariate results
res_full_list <- lapply(vax_cont_list,compute_uni_full)
names(res_full_list)<- names(vax_cont_list)     ##Set list names

##Get the main effect
res_main_list<- lapply(res_full_list, get_maineff1)
res_main<- dplyr::bind_rows(res_main_list, .id = 'model')

##Get tables for export
res_tab_list <- lapply(res_full_list,get_tab)
write.xlsx(res_tab_list, "0_tab/res_maineffect_full_v5.xlsx")


###Visualizations for main effect
empty <- data.frame(model ="val99_all",vaxcat = "",mod=rep(c("Multivariate","Univariate"),each=4),truncate="val99",outcome=c("all","other","work","home"),
                    est = NA, lo=NA, hi=NA)

res_main<- res_main%>%
            pivot_longer(cols=uni_est:multi_hi, names_to="var",values_to="values")%>%
            mutate(values = ifelse(vaxcat=="Series_Complete_Pop_Pct",values*20,values))%>%
            mutate(mod= sub("_.*", "", var),         ##Extract pattern before underscore, uni or multi model
                   var= sub(".*_", "", var),         ##Extract pattern after underscore, estimate type, either estimate, lo or hi bounds
                   truncate =sub("_.*", "", model),  ##Type of truncation (100 contacts, 99th, 97.5th or 95th percentile)
                   outcome = sub(".*_", "", model)   ##Type of outcome (all, other, work or home)
            )%>%   
            pivot_wider(names_from = "var",values_from = "values")%>%
          
  
           bind_rows(empty)%>%
  ##Fixing labels
            mutate(vaxcat = case_when(
                            vaxcat == ""~"",
                            vaxcat =="a1_first_new"~"First dose new",
                            #vaxcat == "a2_both_new"~"Both dose new",
                            vaxcat=="a2_full_new"~"Second dose new",
                            vaxcat=="a3_full_vax"~"Already fully vaxed",
                            vaxcat=="Series_Complete_Pop_Pct"~"Every 20% increase in vax coverage"),
                   vaxcat=factor(vaxcat, levels = c("Every 20% increase in vax coverage","","First dose new","Both dose new","Second dose new","Already fully vaxed")),
                   
                   truncate = case_when(
                            truncate=="val100"~"100 contacts",
                            truncate=="val99" ~"99th percentile",
                            truncate=="val975"~"97.5th percentile",
                            truncate=="val95"~"95th percentile"),
                   
                   mod = ifelse(mod=="uni","Univariate","Multivariate"),
                   outcome = factor(outcome, levels = c("all","other","work","home")))%>%
            
              arrange(truncate,outcome,mod,vaxcat)



p1_main <-res_main %>%
          filter(truncate=="99th percentile")%>%
          ggplot(aes(x=vaxcat, color=mod, group=mod))+
          geom_point(aes(y=est),size=5,position=position_dodge(width=0.5))+
          geom_errorbar(aes(ymin = lo, ymax=hi),width=0.2, size=1, position=position_dodge(width=0.5))+
          geom_hline(yintercept=0, linetype="dashed")+
          scale_color_brewer(palette = "YlGnBu",direction=-1, name="Model")+
          scale_x_discrete(labels=function(x) str_wrap(x,width=12))+
          theme_bw()+
          ggtitle("Model results")+ylab("Difference in contact change compared to contact change among unvaccinated")+
          xlab("Vaccination status")+
          coord_flip()+
          facet_wrap(~outcome, ncol=4)+
          theme(legend.position = c(0.94, 0.2), 
                legend.text = element_text(size=12),
                legend.title=element_text(size=14),
                axis.text.y = element_text(size=14),
                axis.text.x = element_text(size=11),
                axis.title=element_text(size=14),
                plot.title = element_text(size=14),
                strip.text = element_text(size=14))

df <- readRDS("0_RDSdata/4_r0_vary.RDS")
df1 <- readRDS("0_RDSdata/4_r0_ve_vary.RDS")

pal2 <- c("#BFD3E6","#9EBCDA","#8C6BB1","#810F7C","#4D004B")
df1 <- df1%>%
        mutate(r0_rel = r0/3)
p2a <-df1%>%
      select(ve_s, round, r0_rel,cov)%>%
      filter(ve_s %in%c(0,0.25,0.5,0.75,0.95))%>%
      filter(cov==0.5)%>%
      ggplot(aes(x=round, y=r0_rel,color=factor(ve_s), group=ve_s))+
      geom_point()+
      geom_line()+
      scale_color_manual(values=rev(pal2))+
      #scale_color_brewer(palette="BuPu",direction=-1)+
      theme_classic()+ylab("R relative to initial R0")+
      xlab("Round")+
      ggtitle("Relative transmissibility based on measured contacts in vaxed & unvaxed")

pal <- c("#A50026","#D73027", "#F46D43","#FDAE61","#FEE090","#FFFFBF","#E0F3F8","#ABD9E9","#74ADD1","#4575B4","#313695")
#pal <- c("#A50026","#D73027","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#D9EF8B","#A6D96A",
         #"#66BD63","#1A9850","#006837")
survey_cont <- data.frame(cont_v = c(9.2,11.6,14.9),
                          cont_u = c(11.5,15.6,17.3),
                          round = c("round1","round2","round3"))

df <- df%>%
  mutate(cont_v = cont_vv+cont_vu,
         cont_u = cont_uu+cont_uv)%>%
  filter(ve_s %in% c(0,0.25,0.5,0.75,0.95))%>%
  mutate(ve_lab = paste("VE - ",ve_s*100,"%", sep=""))



df50 <- df%>%filter(ve_s==0.50)
p2b <- ggplot()+
  geom_raster(data=df50,aes(x=cont_v, y=cont_u,z=r0_rel,fill=r0_rel),alpha=0.8)+
  scale_fill_gradientn(breaks=c(0,0.5,1,1.5,2,2.5),colours=rev(pal))+
  geom_point(data=survey_cont, aes(x=cont_v,y=cont_u,label=round),shape=18,size=4)+
  geom_text(data=survey_cont,aes(x=cont_v,y=cont_u,label=round), nudge_y = -1.3, nudge_x = 2)+
  theme_bw()+
  xlab("Contacts per person per day among vaccinated")+ylab("Contacts per person per day \n among unvaxed")+
  ggtitle("")+
  theme(legend.position = "left",
        legend.text = element_text(size=14),
        legend.title=element_text(size=14),
        axis.text.y = element_text(size=14),
        axis.text.x = element_text(size=14),
        axis.title=element_text(size=14),
        plot.title = element_text(size=14),
        strip.text = element_text(size=14))

p2b_supp <- ggplot()+
  geom_raster(data=df,aes(x=cont_v, y=cont_u,z=r0_rel,fill=r0_rel),alpha=0.8)+
  scale_fill_gradientn(breaks=c(0,0.5,1,1.5,2,2.5),colours=rev(pal))+
  geom_point(data=survey_cont, aes(x=cont_v,y=cont_u,label=round),shape=18,size=4)+
  geom_text(data=survey_cont,aes(x=cont_v,y=cont_u,label=round), nudge_y = -1.3, nudge_x = 2)+
  facet_wrap(~ve_lab,nrow=1)+
  theme_bw()+
  xlab("Contacts per person per day among vaccinated")+ylab("Contacts per person per day \n among unvaxed")+
  ggtitle("")+
  theme(legend.position = "left",
        legend.text = element_text(size=14),
        legend.title=element_text(size=14),
        axis.text.y = element_text(size=14),
        axis.text.x = element_text(size=14),
        axis.title=element_text(size=14),
        plot.title = element_text(size=14),
        strip.text = element_text(size=14))

png("0_plot/1_fig2_v2.png",width=13,height=10, units="in",res=400)
#grid.arrange(p1,p8,p10,ncol=2,nrow=2,
#             layout_matrix=rbind(c(1,2),c(1,3)))
gridExtra::grid.arrange(p1_main,p2,ncol=1, nrow=5, 
          layout_matrix=rbind(1,2))
dev.off()



p1_supp <- res_main%>%
            ggplot(aes(x=vaxcat, color=mod, group=mod))+
            geom_point(aes(y=est),size=5,position=position_dodge(width=0.7))+
            geom_errorbar(aes(ymin = lo, ymax=hi),width=0.4, size=1.0, position=position_dodge(width=0.7))+
            geom_hline(yintercept=0, linetype="dashed")+
            scale_color_brewer(palette = "YlGnBu",direction=-1, name="Model")+
            theme_bw()+
            ggtitle("Model results")+ylab("Difference in contact change compared to contact change among unvaccinated")+
            xlab("Vaccination status")+
            coord_flip()+
            facet_grid(rows = vars(truncate),cols=vars(outcome))+
            theme(legend.position = "bottom",
                  axis.text = element_text(size=16),
                  axis.title=element_text(size=16),
                  plot.title = element_text(size=16),
                  strip.text = element_text(size=16),
                  legend.text = element_text(size=16))

png("0_plot/1_modres_main_v5.png",width=8,height=4, units="in",res=300)
p1_main
dev.off()

png("0_plot/1_modres_supp_v2.png",width=12,height=12, units="in",res=500)
p1_supp
dev.off()

##Multivariate model
df <- vax_cont_long_full%>%filter(outcome=="val99_all")

mod_full4<- lmer(cont_chng ~ vax_cat2+StringencyIndex+variant_worry_cat+age_cat1+pol_cat+hh_cat+emp_cat+base_cont+lca4_full+Series_Complete_18PlusPop_Pct+income+(1|p_id), data = df)
full_res4 <- mod_res(mod_full4)

