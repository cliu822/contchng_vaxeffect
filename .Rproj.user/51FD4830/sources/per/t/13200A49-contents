---
title: "2_lca_baseline_v2"
output: html_document
date: "2023-07-18"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library("poLCA")
library("dplyr")
library("tidyr")
library("ggplot2")
library("RColorBrewer")
library("fmsb")
```

## Read in data
```{r}
df_base <- readRDS("0_RDSdata/0_baseline_characteristics.RDS") #Wide version baseline characteristics
df_behav <- readRDS("0_RDSdata/2_behavior_r1r2r3r4.RDS") #Wide version of behavior info r1-r4
df_contact_long <- readRDS("0_RDSdata/1_contact_long_r1r2r3r4.RDS") #Long version of all contact at each location r1-r4
df_cont_all_long <- df_contact_long %>% 
                    filter(type == "all") %>%
                    mutate(value = ifelse(value>100,100,value)) ### Made all those with greater than 100 into 100, essentially right censored?
df_cont_all_long_r1 <- df_cont_all_long %>% filter(round=="r1")
```

##Which ones might have NA
```{r}
sum(is.na(df_behav$social_distant__r1))
sum(is.na(df_behav$travel_essential__r1))
sum(is.na(df_behav$travel_nonessential__r1))
sum(is.na(df_behav$facemask__r1))
sum(is.na(df_behav$public_trans__r1))
sum(is.na(df_behav$soap__r1))
sum(is.na(df_behav$sanitize__r1))
```

## Recat df_behav data
Preparing for LCA
```{r}
df_behav<- df_behav%>%
  mutate(public_trans__r1=public_trans__r1+1,
         public_trans__r2=public_trans__r2+1,
         public_trans__r3=public_trans__r3+1,
         public_trans__r4=public_trans__r4+1)

##Reverse the masking coding to align with others
df_behav<- df_behav%>%
  mutate(facemask2__r1 =
           case_when(is.na(facemask__r1)~NA_integer_,
                     facemask__r1 ==5~1,
                     facemask__r1 ==4~2,
                     facemask__r1 ==3~3,
                     facemask__r1 ==2~4,
                     facemask__r1 ==1~5
                     ))

##Recode to make sense of levels of NPIs
soc_dist_lev <- data.frame(orig = c(1,2,3,4,5),
                           soc_dist_cat = factor(c("Never","Rarely","Sometimes","Often","Always"), 
                                                 levels = c("Never","Rarely","Sometimes","Often","Always")))
travel_lev  <- data.frame(orig = c(1,2,3,4,5,6),
                          trav_cat = factor(c("Daily","Several times a week","Once a week","Once 2-3 week","Monthly","Never travel"),
                                            levels = c("Daily","Several times a week","Once a week","Once 2-3 week","Monthly","Never travel")))

mask_lev <- data.frame(orig = c(1,2,3,4,5),
                       mask_cat = factor(c("Never","Rarely","Sometimes","Often","Always"),
                                         levels = c("Never","Rarely","Sometimes","Often","Always")))
trans_lev <- data.frame(orig = c(1,2,3,4,5),
                        trans_cat = factor(c("0","1-2","3-5","6-10","More than 10"),
                                           levels=c("0","1-2","3-5","6-10","More than 10")))
vax_lev <- data.frame(orig = c(1,2,3,4,5),
                      vax_cat=factor(c("Very unlikely","Somewhat unlikely","Somewhat likely","Very likely","Unsure"),
                              levels=c("Very unlikely","Somewhat unlikely","Somewhat likely","Very likely","Unsure")))

##retain missings
df_behav <- df_behav %>%
  left_join(soc_dist_lev, by = c("social_distant__r1"="orig"))%>%
  rename("socdist_cat__r1"="soc_dist_cat")%>%
  
  left_join(travel_lev, by = c("travel_essential__r1"="orig"))%>%
  rename("travess_cat__r1"="trav_cat")%>%
  
  left_join(travel_lev, by = c("travel_nonessential__r1"="orig"))%>%
  rename("travnoness_cat__r1"="trav_cat") %>%
  
  left_join(mask_lev, by = c("facemask2__r1"="orig"))%>%
  rename("maskcat__r1"="mask_cat")%>%
  
  left_join(vax_lev, by = c("vaccine__r1"="orig"))%>%
  rename("vaxcat__r1"="vax_cat")%>%
  
  left_join(trans_lev, by = c("public_trans__r1"="orig"))%>%
  rename("transcat__r1"="trans_cat")
  

df_behav <- df_behav%>%
  mutate(soapcat__r1 = case_when(
    is.na(soap__r1)~NA_integer_,
    soap__r1<=4~1,
    soap__r1<=6~2,
    soap__r1<=10~3,
    soap__r1<=105~4
  ),
  sanicat__r1 = case_when(
    is.na(sanitize__r1)~NA_integer_,
    sanitize__r1 ==0 ~ 1,
    sanitize__r1 <=3 ~2,
    sanitize__r1 <=5 ~3,
    sanitize__r1 <=200~4
  ))
```

##Distribution of indicator variables among participants
```{r}
df_behav_long <- df_behav%>%select(socdist_cat__r1,travess_cat__r1,travnoness_cat__r1,maskcat__r1,vaxcat__r1,transcat__r1)%>%
  pivot_longer(cols=socdist_cat__r1:transcat__r1, names_to="var", values_to="val")

tab_behav <- df_behav_long%>%group_by(var,val)%>%
  summarise(n=n())%>%
  mutate(prop = round(n/2403, digits=2))%>%
  mutate(var=factor(var, levels=c("maskcat__r1","socdist_cat__r1","travess_cat__r1","travnoness_cat__r1","vaxcat__r1","transcat__r1")))%>%
  arrange(var,val)

pal <- c(brewer.pal(5,"Blues"),brewer.pal(6,"Greens"),brewer.pal(5,"Purples"),brewer.pal(5,"RdPu"),"#c0c0c0")
p1 <- tab_behav%>%
  ggplot(aes(x=var,y=n,fill=val))+
  geom_col()+
  scale_fill_manual(values=pal)+
  scale_x_discrete(
                  #limits = c("maskcat__r1","socdist_cat__r1","travess_cat__r1","travnoness_cat__r1","vaxcat__r1"))+
                 
                  labels=c("Masking","Social distancing","Essential travel","Nonessential travel","Willing to vax","Public transport freq"))+
  theme_bw()+
  theme(axis.text.x = element_text(angle=15, vjust=1,hjust=0.8))+
  xlab("")+ylab("Number of participants")+ggtitle("Distribution of responses to risk mitigation measures at baseline")
  
png("0_plot/risk_mitigation_distribution.png",width=8, height=4, units="in",res=300)
p1
dev.off()

```
## All covariates
```{r}
#ALl covariates: Social distant, travel essential, travel nonessential, facemask, soap, sanitize, pub transport
f1 <- as.formula(cbind(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask2__r1,soapcat__r1, sanicat__r1,public_trans__r1,vaccine__r1)~1)

full <- list()
full[[1]] <- poLCA(f1, data=df_behav, nclass=1, na.rm=F)
full[[2]] <- poLCA(f1, data=df_behav, nclass=2, na.rm=F)
full[[3]] <- poLCA(f1, data=df_behav, nclass=3,nrep=20, maxiter=1000,na.rm=F)
full[[4]] <- poLCA(f1, data=df_behav, nclass=4,nrep=20, maxiter=5000, na.rm=F)
full[[5]] <- poLCA(f1, data=df_behav, nclass=5,nrep=20, maxiter=8000, na.rm=F)
full[[6]] <- poLCA(f1, data=df_behav, nclass=6,nrep=20, maxiter=10000, na.rm=F)

##Summary statistics on fit and diagnostics
mfull_bic <- unlist(rbind(lapply(full,function(x) {print(x$bic)})))
mfull_aic <- unlist(rbind(lapply(full,function(x) {print(x$aic)})))
mfull_small <- round(unlist(rbind(lapply(full,function(x){print(min(x$P)*2403)}))),digits=0)
mfull_smallprop <- round(mfull_small/2403,digits=2)

#Add predicted class into data frame

df_behav$lca3_full <- full[[3]]$predclass
df_behav$lca4_full <- full[[4]]$predclass
df_behav$lca5_full <- full[[5]]$predclass
```

#Mod1 covariates: Social distant, travel essential, travel nonessential, facemask, soap, sanitize, vaccine
```{r}
f2 <- as.formula(cbind(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask2__r1,soapcat__r1, sanicat__r1,vaccine__r1)~1)

mod1 <- list()
mod1[[1]] <- poLCA(f2, data=df_behav, nclass=1, na.rm=F)
mod1[[2]] <- poLCA(f2, data=df_behav, nclass=2, na.rm=F)
mod1[[3]] <- poLCA(f2, data=df_behav, nclass=3,nrep=20, maxiter=1000,na.rm=F)
mod1[[4]] <- poLCA(f2, data=df_behav, nclass=4,nrep=20, maxiter=5000, na.rm=F)
mod1[[5]] <- poLCA(f2, data=df_behav, nclass=5,nrep=20, maxiter=8000, na.rm=F)
mod1[[6]] <- poLCA(f2, data=df_behav, nclass=6,nrep=20, maxiter=10000, na.rm=F)

##Summary statistics on fit and diagnostics
m1_bic <- unlist(rbind(lapply(mod1,function(x) {print(x$bic)})))
m1_aic <- unlist(rbind(lapply(mod1,function(x) {print(x$aic)})))
m1_small <- round(unlist(rbind(lapply(mod1,function(x){print(min(x$P)*2403)}))),digits=0)
m1_smallprop <- round(m1_small/2403,digits=2)

df_behav$lca3_mod1 <- mod1[[3]]$predclass
df_behav$lca4_mod1 <- mod1[[4]]$predclass
df_behav$lca5_mod1 <- mod1[[5]]$predclass
```

#Mod2 covariates: Social distant, travel essential, travel nonessential, facemask,vaccine
```{r}
f3 <- as.formula(cbind(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask2__r1,vaccine__r1)~1)

mod2 <- list()
mod2[[1]] <- poLCA(f3, data=df_behav, nclass=1, na.rm=F)
mod2[[2]] <- poLCA(f3, data=df_behav, nclass=2, na.rm=F)
mod2[[3]] <- poLCA(f3, data=df_behav, nclass=3,nrep=20, maxiter=1000,na.rm=F)
mod2[[4]] <- poLCA(f3, data=df_behav, nclass=4,nrep=20, maxiter=5000, na.rm=F)
mod2[[5]] <- poLCA(f3, data=df_behav, nclass=5,nrep=20, maxiter=8000, na.rm=F)
mod2[[6]] <- poLCA(f3, data=df_behav, nclass=6,nrep=20, maxiter=10000, na.rm=F)
unlist(rbind(lapply(mod2,function(x) {print(x$bic)})))

##Summary statistics on fit and diagnostics
m2_bic <- unlist(rbind(lapply(mod2,function(x) {print(x$bic)})))
m2_aic <- unlist(rbind(lapply(mod2,function(x) {print(x$aic)})))
m2_small <- round(unlist(rbind(lapply(mod2,function(x){print(min(x$P)*2403)}))),digits=0)
m2_smallprop <- round(m2_small/2403,digits=2)

df_behav$lca3_mod2 <- mod2[[3]]$predclass
df_behav$lca4_mod2 <- mod2[[4]]$predclass
df_behav$lca5_mod2 <- mod2[[5]]$predclass
```

#Mod3 covariates: Social distant, travel essential, travel nonessential, facemask
```{r}
f4 <- as.formula(cbind(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask2__r1)~1)
##Retain missing
mod3 <- list()
mod3[[1]] <- poLCA(f4, data=df_behav, nclass=1, na.rm=F)
mod3[[2]] <- poLCA(f4, data=df_behav, nclass=2, na.rm=F)
mod3[[3]] <- poLCA(f4, data=df_behav, nclass=3,nrep=20, maxiter=1000,na.rm=F)
mod3[[4]] <- poLCA(f4, data=df_behav, nclass=4,nrep=20, maxiter=5000, na.rm=F)
mod3[[5]] <- poLCA(f4, data=df_behav, nclass=5,nrep=20, maxiter=8000, na.rm=F)
mod3[[6]] <- poLCA(f4, data=df_behav, nclass=6,nrep=20, maxiter=10000, na.rm=F)
unlist(rbind(lapply(mod3,function(x) {print(x$bic)})))

##Summary statistics on fit and diagnostics
m3_bic <- unlist(rbind(lapply(mod3,function(x) {print(x$bic)})))
m3_aic <- unlist(rbind(lapply(mod3,function(x) {print(x$aic)})))
m3_small <- round(unlist(rbind(lapply(mod3,function(x){print(min(x$P)*2403)}))),digits=0)
m3_smallprop <- round(m3_small/2403,digits=2)

df_behav$lca3_mod3 <- mod3[[3]]$predclass
df_behav$lca4_mod3 <- mod3[[4]]$predclass
df_behav$lca5_mod3 <- mod3[[5]]$predclass
```

##Mean posterior probability
```{r}

mean_post_prob <- function(x){
     df <- poLCA.posterior(lc=x,y=mapply(as.numeric,x$y[1:2403,]))
      mean(apply(df, 1, max, na.rm=TRUE))
}

mfull_postprob <-  round(unlist(rbind(lapply(full,mean_post_prob))),digits=2)
m1_postprob <-  round(unlist(rbind(lapply(mod1,mean_post_prob))),digits=2)
m2_postprob <-  round(unlist(rbind(lapply(mod2,mean_post_prob))),digits=2)
m3_postprob <-  round(unlist(rbind(lapply(mod3,mean_post_prob))),digits=2)


```

##Entropy calculation
```{r}

entropy_calc <- function(x){
  entropy<-function (p) sum(-p*log(p))
  error_prior <- entropy(x$P) # Class proportions
  error_post <- mean(apply(x$posterior, 1, entropy),na.rm=T)
  (error_prior - error_post) / error_prior
}

mfull_entr <- round(unlist(rbind(lapply(full,entropy_calc))),digits=2)
m1_entr <- round(unlist(rbind(lapply(mod1,entropy_calc))),digits=2)
m2_entr <- round(unlist(rbind(lapply(mod2,entropy_calc))),digits=2)
m3_entr <- round(unlist(rbind(lapply(mod3,entropy_calc))),digits=2)
```



##Fit and diagnostics table
```{r}
tab_fit <- data.frame(mfull_bic,m1_bic,m2_bic,m3_bic,mfull_aic,m1_aic,m2_aic,m3_aic,mfull_small,m1_small,m2_small,m3_small,
                      mfull_postprob,m1_postprob,m2_postprob,m3_postprob,
                      mfull_entr,m1_entr,m2_entr,m3_entr,
                      mfull_smallprop,m1_smallprop,m2_smallprop,m3_smallprop)%>%
              mutate(mfull_small = paste(mfull_small, " (",mfull_smallprop*100,"%)",sep=""),
                     m1_small = paste(m1_small, " (",m1_smallprop*100,"%)",sep=""),
                     m2_small = paste(m2_small, " (",m2_smallprop*100,"%)",sep=""),
                     m3_small = paste(m3_small, " (",m3_smallprop*100,"%)",sep=""))%>%
              select(mfull_bic:m3_entr)

tab_fit <- t(tab_fit)

write.csv(tab_fit, "0_tab/lca_fitcomp.csv")
```


##Spider plot- set up df 
```{r}
df_modclass_sum <- df_behav%>%select(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask2__r1,soapcat__r1, sanicat__r1,vaccine__r1,
                          lca3_full:lca5_mod3)%>%
          pivot_longer(lca3_full:lca5_mod3, names_to="mod",values_to = "class")%>%
          group_by(mod, class)%>%
          summarise(soc_dist = mean(social_distant__r1,na.rm=T),
                    travess = mean(travel_essential__r1, na.rm=T),
                    travnoess = mean(travel_nonessential__r1, na.rm=T),
                    mask = mean(facemask2__r1, na.rm=T),
                    soap = mean(soapcat__r1, na.rm=T),
                    sani = mean(sanicat__r1, na.rm=T),
                    #pubtrans=mean(public_trans__r1, na.rm=T),
                    vax = mean(vaccine__r1,na.rm=T))


df_modclass_sum <- df_modclass_sum%>%
                      mutate(sum_score= soc_dist+travess+travnoess+mask+soap+sani+vax)%>%
                      arrange(mod, sum_score)

max_min <- data.frame(
              mod=c("max", "min"),class= c(0,0),
              soc_dist = c(5,1), travess = c(6,1), travnoess = c(6,1),mask=c(5,1), soap = c(4,1), sani = c(4,1), 
              #pubtrans = c(5,1), 
              vax=c(5,1),
              sum_score=c(0,0)
)

df_modclass_sum <- rbind(max_min, df_modclass_sum)

df_modclass_sum_lca3 <- df_modclass_sum%>%
                        filter(mod %in% c("lca3_full","lca3_mod1","lca3_mod2","lca3_mod3"))%>%
                        mutate(class_riskmit = rep(c("low","med","high"),times=4),
                               class_riskmit_num=rep(c(1,2,3),times=4))

df_modclass_sum_lca4 <- df_modclass_sum%>%
                        filter(mod %in% c("lca4_full","lca4_mod1","lca4_mod2","lca4_mod3"))%>%
                        mutate(class_riskmit = rep(c("low","med-low","med-high","high"),times=4),
                               class_riskmit_num=rep(c(1,2,3,4),times=4))

df_modclass_sum_lca5 <- df_modclass_sum%>%
                        filter(mod %in% c("lca5_full","lca5_mod1","lca5_mod2","lca5_mod3"))%>%
                        mutate(class_riskmit = rep(c("lowest","low","med","high","highest"),times=4),
                               class_riskmit_num=rep(c(1,2,3,4,5),times=4))
                      

```


##Spider plot- base function
```{r}
create_beautiful_radarchart <- function(data, color = "#00AFBB", 
                                        vlabels = colnames(data), vlcex = 0.7,
                                        caxislabels = NULL, title = NULL, ...){
  radarchart(
    data, axistype = 1,
    # Customize the polygon
    pcol = color, pfcol = scales::alpha(color, 0.1), plwd = 2, plty = 1,
    # Customize the grid
    cglcol = "grey", cglty = 1, cglwd = 0.8,
    # Customize the axis
    axislabcol = "grey", 
    # Variable labels
    vlcex = vlcex, vlabels = vlabels,
    caxislabels = caxislabels, title = title, ...
  )
}

```

##Spider plot-3 class
```{r}

df1 <- df_modclass_sum[c(1,2,3,4,5),3:9]%>%mutate(name="full")
df2 <- df_modclass_sum[c(1,2,6,7,8),3:9]%>%mutate(name="mod1")
df3 <- df_modclass_sum[c(1,2,9,10,11),3:9]%>%mutate(name="mod2")
df4 <- df_modclass_sum[c(1,2,12,13,14),3:9]%>%mutate(name="mod3")

lca3_list <- list(df1,df2,df3,df4)
names(lca3_list) <- c("full","mod1","mod2","mod3")

radar_func <- function(x){
  rownames(x)<-c("max","min","low","med","high")
  png(paste0("0_plot/radar_",x$name[1],".png"),res=100)
    x <- x[,1:7]
    create_beautiful_radarchart(
              data = x, caxislabels = c(0, 5, 10, 15, 20),
              color = c( "#FC4E07","#00AFBB","#E7B800")
              )
              # Add an horizontal legend
             legend(
                x = "bottom", legend = rownames(x[-c(1,2),]), horiz = TRUE,
                bty = "n", pch = 20 , col = c( "#FC4E07","#00AFBB","#E7B800"),
                text.col = "black", cex = 0.7, pt.cex = 2)
  dev.off()
}
lapply(lca3_list, radar_func)

```

## Spider plot- 4 class

```{r}

df1 <- df_modclass_sum[c(1,2,15:18),3:9]%>%mutate(name="full")
df2 <- df_modclass_sum[c(1,2,19:22),3:9]%>%mutate(name="mod1")
df3 <- df_modclass_sum[c(1,2,23:26),3:9]%>%mutate(name="mod2")
df4 <- df_modclass_sum[c(1,2,27:30),3:9]%>%mutate(name="mod3")

lca4_list <- list(df1,df2,df3,df4)

radar_func <- function(x){
  rownames(x)<-c("max","min","low","med-low","med-high","high")
  png(paste0("0_plot/radar4_",x$name[1],".png"),res=100)
    x <- x[,1:7]
    create_beautiful_radarchart(
              data = x, caxislabels = c(0, 5, 10, 15, 20),
              color = c("#891FA5","#FC4E07","#00AFBB","#E7B800")
              )
              # Add an horizontal legend
             legend(
                x = "bottom", legend = rownames(x[-c(1,2),]), horiz = TRUE,
                bty = "n", pch = 20 , col = c("#891FA5","#FC4E07","#00AFBB","#E7B800"),
                text.col = "black", cex = 0.7, pt.cex = 2)
  dev.off()
}
lapply(lca4_list, radar_func)
```

## Spider plot- 5 class

```{r}

df1 <- df_modclass_sum[c(1,2,31:35),3:9]%>%mutate(name="full")
df2 <- df_modclass_sum[c(1,2,36:40),3:9]%>%mutate(name="mod1")
df3 <- df_modclass_sum[c(1,2,41:45),3:9]%>%mutate(name="mod2")
df4 <- df_modclass_sum[c(1,2,46:50),3:9]%>%mutate(name="mod3")

lca5_list <- list(df1,df2,df3,df4)

radar_func <- function(x){
  rownames(x)<-c("max","min","lowest","low","med","high","highest")
  png(paste0("0_plot/radar5_",x$name[1],".png"),res=100)
    x <- x[,1:7]
    create_beautiful_radarchart(
              data = x, caxislabels = c(0, 5, 10, 15, 20),
              color = c("#891FA5","#FC4E07","#00AFBB","#0DB143","#E7B800")
              )
              # Add an horizontal legend
             legend(
                x = "bottom", legend = rownames(x[-c(1,2),]), horiz = TRUE,
                bty = "n", pch = 20 , col = c("#891FA5","#FC4E07","#00AFBB","#0DB143","#E7B800"),
                text.col = "black", cex = 0.7, pt.cex = 2)
  dev.off()
}
lapply(lca5_list, radar_func)
```
##Cross tabs over classifications
```{r}
df_behav%>%
  group_by(lca3_full,lca3_mod1)%>%
  summarise(n=n())%>%
  pivot_wider(names_from = "lca3_mod1", values_from = "n")

df_behav%>%
  group_by(lca3_full,lca3_mod2)%>%
  summarise(n=n())%>%
  pivot_wider(names_from = "lca3_mod2", values_from = "n")

df_behav%>%
  group_by(lca3_full,lca3_mod3)%>%
  summarise(n=n())%>%
  pivot_wider(names_from = "lca3_mod3", values_from = "n")
```



##Differences in contact rate between different classifications
```{r}
lca_recat <- rbind(df_modclass_sum_lca3%>%select(mod,class,class_riskmit_num,sum_score),
                   df_modclass_sum_lca4%>%select(mod,class, class_riskmit_num,sum_score),
                   df_modclass_sum_lca5%>%select(mod,class, class_riskmit_num,sum_score))

df_cont_all_long_r1%>%
  select(p_id, value)%>%
  left_join(df_behav%>%select(p_id,lca3_full:lca4_mod3))%>%
  pivot_longer(cols=lca3_full:lca4_mod3, names_to="lcamod",values_to="class")%>%
  left_join(lca_recat, by =c("lcamod"="mod","class"="class"))%>%
  group_by(lcamod,class_riskmit_num,sum_score)%>%
  summarise(mean = mean(value),
            med = median(value),
            n = n())

p99 <-df_cont_all_long_r1%>%
  select(p_id, value)%>%
  left_join(df_behav%>%select(p_id,lca3_full:lca4_mod3))%>%
  pivot_longer(cols=lca3_full:lca4_mod3, names_to="lcamod",values_to="class")%>%
  left_join(lca_recat, by =c("lcamod"="mod","class"="class"))%>%
  ggplot(aes(x=as.factor(class_riskmit_num), y=value))+
  geom_boxplot()+
  facet_wrap(~lcamod)+
  scale_y_log10()+
  ylab("Distribution of mean contact")+
  xlab("Risk mitigation behavior class (1-least mitigation, 5-most mitigation)")+
  theme_bw()

png("0_plot/distr_contact_byclass.png",width=10,height=6,units="in", res=200)
p99
dev.off()
```


##Write out classifications to be used in the main model
```{r}
lca_recat <- rbind(df_modclass_sum_lca3%>%select(mod,class,class_riskmit_num,sum_score),
                   df_modclass_sum_lca4%>%select(mod,class, class_riskmit_num,sum_score),
                   df_modclass_sum_lca5%>%select(mod,class, class_riskmit_num,sum_score))

df_class <- df_behav%>%
                select(p_id, lca3_full:lca5_mod3)%>%
                pivot_longer(cols = lca3_full:lca5_mod3, names_to = "mod", values_to = "class")%>%
                left_join(lca_recat%>%select(mod, class,class_riskmit_num))%>%
                select(p_id, mod, class_riskmit_num)%>%
                pivot_wider(names_from = "mod", values_from = "class_riskmit_num")

saveRDS(df_class, "0_RDSdata/0_lca_class.RDS")
```



##Compare distribution of covariates 
```{r}
df_behav%>%
  select(social_distant__r1, travel_essential__r1,travel_nonessential__r1, facemask__r1,public_trans__r1,vaccine__r1,
         lca3_full, lca3_mod2, lca3_mod3)%>%
  pivot_longer(cols = lca3_full:lca3_mod3, names_to="mod",values_to="class")%>%
  mutate(class = as.factor(class))%>%
  pivot_longer(cols= social_distant__r1:vaccine__r1, names_to = "var",values_to = "val")%>%
  group_by(mod,class,var,val)%>%
  summarise(n=n())%>%
  mutate(prop = n/2403)%>%
  ggplot(aes(x=var,y=prop,fill=val))+
  geom_col()+
  facet_grid(rows=vars(mod), cols = vars(class), scales = "free")
  scale_fill_manual(values=pal)+
  scale_x_discrete(
                  #limits = c("maskcat__r1","socdist_cat__r1","travess_cat__r1","travnoness_cat__r1","vaxcat__r1"))+
                 
                  labels=c("Masking","Social distancing","Essential travel","Nonessential travel","Willing to vax","Public transport freq"))+
  theme_bw()+
  theme(axis.text.x = element_text(angle=15, vjust=1,hjust=0.8))+
  xlab("")+ylab("Number of participants")+ggtitle("Distribution of responses to risk mitigation measures at baseline")+
  facet_wrap(~class)
  #facet_grid(rows=vars(mod), cols = vars(class))
```




